# Generated by Django 4.2.2 on 2023-08-22 23:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    replaces = [
        ("coins", "0001_initial"),
        ("coins", "0002_alter_denominations_family"),
        ("coins", "0003_alter_coinfamily_options_alter_cointypename_options_and_more"),
        ("coins", "0004_coinbasemodel"),
        ("coins", "0005_selectmints_coinbasemodel_mint"),
        ("coins", "0006_rename_west_coast_selectmints_west_point"),
        ("coins", "0007_selectonemint_alter_coinbasemodel_mint_and_more"),
        ("coins", "0008_selectmints_strike_alter_selectonemint_options_and_more"),
        ("coins", "0009_alter_coinbasemodel_options_alter_coinfamily_type"),
        ("coins", "0010_alter_coinfamily_type_alter_strike_strike"),
        ("coins", "0011_alter_coinfamily_type_alter_cointypename_coin_type_and_more"),
        ("coins", "0012_coingrades_gradingservices_alter_coinbasemodel_grade_and_more"),
        ("coins", "0013_alter_coingrades_options_and_more"),
        ("coins", "0014_coinbasemodel_grade2_coinbasemodel_is_deleted"),
        ("coins", "0015_alter_cointypename_denominations_and_more"),
        ("coins", "0016_rename_type_coinfamily_family"),
        ("coins", "0017_rename_family_coinfamily_type"),
        ("coins", "0018_coinbasemodel_is_bulk"),
        ("coins", "0019_coinbasemodel_mints_alter_coinbasemodel_mint"),
        ("coins", "0020_remove_coinbasemodel_mints_remove_coinbasemodel_mint_and_more"),
        ("coins", "0021_alter_coinbasemodel_mint"),
        ("coins", "0022_alter_coinbasemodel_mint"),
        ("coins", "0023_alter_selectonemint_coin_mint"),
        ("coins", "0024_alter_gradingservices_name"),
        ("coins", "0025_alter_gradingservices_name"),
        ("coins", "0026_remove_coinbasemodel_grading_coinbasemodel_grading"),
        ("coins", "0027_alter_gradingservices_name"),
        ("coins", "0028_remove_coinbasemodel_images_coinbasemodel_images"),
        ("coins", "0029_alter_coinbasemodel_images_and_more"),
        ("coins", "0030_remove_coinbasemodel_id_and_more"),
        ("coins", "0031_mintsettypesmodel_mintproductsmodel"),
        ("coins", "0032_remove_mintproductsmodel_mint_set_name"),
    ]

    initial = True

    dependencies = [
        ("images", "0001_initial"),
        ("core", "0001_initial"),
        ("images", "0002_alter_images_image"),
    ]

    operations = [
        migrations.CreateModel(
            name="CoinFamily",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[("Gold", "Gold"), ("Silver", "Silver"), ("Clad", "Clad"), ("Copper", "Copper")],
                        max_length=20,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Coin Family",
                "verbose_name_plural": "Coin Families",
            },
        ),
        migrations.CreateModel(
            name="Denominations",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "denomination_of_coin",
                    models.CharField(
                        choices=[
                            ("$50", "$50"),
                            ("$25", "$25"),
                            ("$20", "$20"),
                            ("$10", "$10"),
                            ("$5", "$5"),
                            ("$4", "$4"),
                            ("$3", "$3"),
                            ("$2.5", "$2.5"),
                            ("$1", "$1"),
                            ("50C", "50C"),
                            ("25C", "25C"),
                            ("20C", "20C"),
                            ("10C", "10C"),
                            ("5C", "5C"),
                            ("3CN", "3CN"),
                            ("3CS", "3CS"),
                            ("2C", "2C"),
                            ("1C", "1C"),
                            ("H1C", "H1C"),
                        ],
                        default="$1",
                        max_length=4,
                    ),
                ),
                (
                    "family",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="denominations", to="coins.coinfamily"
                    ),
                ),
            ],
            options={
                "verbose_name": "Denomination",
                "verbose_name_plural": "Denominations",
            },
        ),
        migrations.CreateModel(
            name="CoinTypeName",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("coin_type", models.CharField(max_length=100, unique=True)),
                (
                    "denominations",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coin_type_name",
                        to="coins.denominations",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coin Type Name",
                "verbose_name_plural": "Coin Type Names",
            },
        ),
        migrations.CreateModel(
            name="SelectOneMint",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "coin_mint",
                    models.CharField(
                        choices=[
                            ("Philadelphia Mint", "Philadelphia Mint"),
                            ("San Francisco Mint", "San Francisco Mint"),
                            ("Denver Mint", "Denver Mint"),
                            ("Carson City Mint", "Carson City Mint"),
                            ("West Point Mint", "West Point Mint"),
                            ("Charlotte Mint", "Charlotte Mint"),
                            ("New Orleans Mint", "New Orleans Mint"),
                            ("Dahlonega Mint", "Dahlonega Mint"),
                        ],
                        default="P",
                        max_length=32,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Select One Mint",
                "verbose_name_plural": "Select One Mint",
            },
        ),
        migrations.CreateModel(
            name="SelectMints",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("philadelphia", models.BooleanField(default=False)),
                ("san_francisco", models.BooleanField(default=False)),
                ("denver", models.BooleanField(default=False)),
                ("carson_city", models.BooleanField(default=False)),
                ("west_point", models.BooleanField(default=False)),
                ("charlotte", models.BooleanField(default=False)),
                ("new_orleans", models.BooleanField(default=False)),
                ("dahlonega", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Select Multiple Mints",
                "verbose_name_plural": "Select Multiple Mints",
            },
        ),
        migrations.CreateModel(
            name="Strike",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "strike",
                    models.CharField(
                        choices=[
                            ("MS", "Business/Mint State"),
                            ("PR", "Proof"),
                            ("RPR", "Reverse Proof"),
                            ("PL", "Proof Like"),
                            ("DMPL", "DMPL"),
                            ("STN", "Satin"),
                            ("BRN", "Burnished"),
                        ],
                        default="MS",
                        max_length=4,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Strike",
                "verbose_name_plural": "Strikes",
            },
        ),
        migrations.CreateModel(
            name="CoinGrades",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "grade",
                    models.CharField(
                        choices=[
                            ("70", "70"),
                            ("69+", "69+"),
                            ("69", "69"),
                            ("68+", "68+"),
                            ("68", "68"),
                            ("67+", "67+"),
                            ("67", "67"),
                            ("66+", "66+"),
                            ("66", "66"),
                            ("65+", "65+"),
                            ("65", "65"),
                            ("64+", "64+"),
                            ("64", "64"),
                            ("63+", "63+"),
                            ("63", "63"),
                            ("62+", "62+"),
                            ("62", "62"),
                            ("61+", "61+"),
                            ("61", "61"),
                            ("60+", "60+"),
                            ("60", "60"),
                            ("58", "58"),
                            ("55", "55"),
                            ("50", "50"),
                            ("45", "45"),
                            ("40", "40"),
                            ("35", "35"),
                            ("30", "30"),
                            ("25", "25"),
                            ("20", "20"),
                            ("15", "15"),
                            ("12", "12"),
                            ("10", "10"),
                            ("08", "08"),
                            ("06", "06"),
                            ("04", "04"),
                            ("03", "03"),
                            ("02", "02"),
                            ("01", "01"),
                            ("BU", "BU"),
                            ("CU", "CU"),
                            ("UNC", "UNC"),
                            ("AU+", "AU+"),
                            ("AU", "AU"),
                            ("XF+", "XF+"),
                            ("XF", "XF"),
                            ("VF+", "VF+"),
                            ("VF", "VF"),
                            ("F+", "F+"),
                            ("F", "F"),
                            ("VG+", "VG+"),
                            ("VG", "VG"),
                            ("G+", "G+"),
                            ("G", "G"),
                        ],
                        default="70",
                        max_length=3,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Coin Grades",
                "verbose_name_plural": "Coin Grades",
            },
        ),
        migrations.CreateModel(
            name="GradingServices",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("PCGS", "PCGS"),
                            ("NGC", "NGC"),
                            ("CACG", "CACG"),
                            ("CAC", "CAC"),
                            ("ANACS", "ANACS"),
                            ("ICG", "ICG"),
                            ("Ungraded", "Ungraded"),
                        ],
                        default="PCGS",
                        max_length=32,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Grading Service",
                "verbose_name_plural": "Grading Services",
            },
        ),
        migrations.CreateModel(
            name="CoinBaseModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("strike", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="coins.strike")),
                ("pcgs_number", models.IntegerField(blank=True, null=True)),
                ("title", models.CharField(max_length=80)),
                ("year", models.IntegerField()),
                ("year2", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "grade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="coin_grade", to="coins.coingrades"
                    ),
                ),
                ("cost", models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ("quantity", models.IntegerField(default=1)),
                ("sale_price", models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                (
                    "coin_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coin_type_name",
                        to="coins.cointypename",
                    ),
                ),
                (
                    "denomination_of_coin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="denomination_of_this_coin",
                        to="coins.denominations",
                    ),
                ),
                (
                    "family_of_coin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="family_of_coin",
                        to="coins.coinfamily",
                    ),
                ),
                (
                    "grade2",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coin_grade_2",
                        to="coins.coingrades",
                    ),
                ),
                ("is_bulk", models.BooleanField(default=False)),
                ("mint", models.ManyToManyField(blank=True, related_name="mint", to="coins.selectonemint")),
                ("grading", models.ManyToManyField(related_name="grading_service", to="coins.gradingservices")),
                ("images", models.ManyToManyField(blank=True, to="images.images")),
                (
                    "sku_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.sku",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "verbose_name": "Coin Base Model",
                "verbose_name_plural": "Coin Base Models",
            },
        ),
        migrations.CreateModel(
            name="MintSetTypesModel",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("mint_types", models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="MintProductsModel",
            fields=[
                (
                    "sku_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.sku",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_bulk", models.BooleanField(default=False)),
                ("title", models.CharField(max_length=80)),
                ("year", models.IntegerField()),
                ("year2", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("cost", models.DecimalField(decimal_places=2, default=0, max_digits=11)),
                ("quantity", models.IntegerField(default=1)),
                ("sale_price", models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True)),
                ("images", models.ManyToManyField(blank=True, to="images.images")),
                ("mint", models.ManyToManyField(blank=True, related_name="mint_products", to="coins.selectonemint")),
                (
                    "mint_set_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mint_products",
                        to="coins.mintsettypesmodel",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("core.sku", models.Model),
        ),
    ]
